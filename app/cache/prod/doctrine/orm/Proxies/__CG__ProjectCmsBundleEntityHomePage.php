<?php

namespace Proxies\__CG__\ProjectCmsBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class HomePage extends \ProjectCmsBundle\Entity\HomePage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'id', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'image'];
        }

        return ['__isInitialized__', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'id', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl1', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl2', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl3', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitle4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageTitleDesc4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'pageUrl4', '' . "\0" . 'ProjectCmsBundle\\Entity\\HomePage' . "\0" . 'image'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (HomePage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitle1($pageTitle1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitle1', [$pageTitle1]);

        return parent::setPageTitle1($pageTitle1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitle1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitle1', []);

        return parent::getPageTitle1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitleDesc1($pageTitleDesc1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitleDesc1', [$pageTitleDesc1]);

        return parent::setPageTitleDesc1($pageTitleDesc1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitleDesc1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitleDesc1', []);

        return parent::getPageTitleDesc1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageUrl1($pageUrl1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageUrl1', [$pageUrl1]);

        return parent::setPageUrl1($pageUrl1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageUrl1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageUrl1', []);

        return parent::getPageUrl1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitle2($pageTitle2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitle2', [$pageTitle2]);

        return parent::setPageTitle2($pageTitle2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitle2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitle2', []);

        return parent::getPageTitle2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitleDesc2($pageTitleDesc2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitleDesc2', [$pageTitleDesc2]);

        return parent::setPageTitleDesc2($pageTitleDesc2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitleDesc2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitleDesc2', []);

        return parent::getPageTitleDesc2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageUrl2($pageUrl2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageUrl2', [$pageUrl2]);

        return parent::setPageUrl2($pageUrl2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageUrl2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageUrl2', []);

        return parent::getPageUrl2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitle3($pageTitle3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitle3', [$pageTitle3]);

        return parent::setPageTitle3($pageTitle3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitle3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitle3', []);

        return parent::getPageTitle3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitleDesc3($pageTitleDesc3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitleDesc3', [$pageTitleDesc3]);

        return parent::setPageTitleDesc3($pageTitleDesc3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitleDesc3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitleDesc3', []);

        return parent::getPageTitleDesc3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageUrl3($pageUrl3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageUrl3', [$pageUrl3]);

        return parent::setPageUrl3($pageUrl3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageUrl3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageUrl3', []);

        return parent::getPageUrl3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitle4($pageTitle4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitle4', [$pageTitle4]);

        return parent::setPageTitle4($pageTitle4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitle4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitle4', []);

        return parent::getPageTitle4();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTitleDesc4($pageTitleDesc4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTitleDesc4', [$pageTitleDesc4]);

        return parent::setPageTitleDesc4($pageTitleDesc4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTitleDesc4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTitleDesc4', []);

        return parent::getPageTitleDesc4();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageUrl4($pageUrl4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageUrl4', [$pageUrl4]);

        return parent::setPageUrl4($pageUrl4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageUrl4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageUrl4', []);

        return parent::getPageUrl4();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\Application\Sonata\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

}
